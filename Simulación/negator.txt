#location 0000: reset vector
ld p, 0e
jpi

#location 0003: variables
4f                          # a 03 Entrada
06                          # b 04 Puntero
00                          # c 05 Resultado
80 40 20 10 08 04 02 01     # d 06 Constantes

#location 000e: a + (b) + c                             10 cycles
ld p, 03
ld p, (p)
add 00
ld p, 04
ld p, (p)
ld p, (p)
add a
ld p, 05
ld p, (p)
add a
#location 001c: if carry goto 002c                      2 cycles
ld p, 2c
jpc
#location 001f: c = c + (b)                             9 cycles
ld p, 04
ld p, (p)
ld p, (p)
add 00
ld p, 05
ld p, (p)
add a
ld p, 05
sta
#location 002c: b = b + 1                               5 cycles
ld p, 04
ld p, (p)
add 01
ld p, 04
sta
#location 0034: if b + f2 = carry goto 003d             5 cycles
ld p, f2
add a
ld p, 3d
jpc
#location 003a: goto 000e                               2 cycles
ld p, 0e
jpi
#location 003d: end of program
jpi

# best 190 cycles
# worst 262 cycles
# average 227 cycles
# available 2000000 / s
# negations per second (worst case): 7633 /s